Чтобы обеспечить различные уровни доступа к сайту для обычных пользователей и администраторов, вы можете внедрить систему аутентификации, которая проверяет учетные данные пользователя и назначает роль или уровень разрешений на основе их уровня доступа.

Один из способов сделать это - создать таблицу базы данных для пользователей, в которой хранятся их имя пользователя, пароль (зашифрованный) и уровень доступа (например, "обычный" или "администратор"). Когда пользователь входит в систему, его учетные данные сверяются с базой данных, чтобы подтвердить его личность и уровень доступа.

Затем в вашем PHP-коде вы можете использовать условные операторы, чтобы определить, какие части сайта должны быть доступны обычным пользователям, а какие - администраторам. Например, у вас может быть навигационное меню, в котором отображаются различные параметры в зависимости от уровня доступа пользователя:
<?php
session_start(); // start the session

if ($_SESSION['access_level'] == 'admin') {
    // show admin-only options
    echo '<a href="/admin/dashboard.php">Dashboard</a>';
    echo '<a href="/admin/users.php">Users</a>';
} else {
    // show regular user options
    echo '<a href="/profile.php">Profile</a>';
    echo '<a href="/logout.php">Logout</a>';
}
?>
В этом примере уровень доступа пользователя хранится в переменной $_SESSION, которая устанавливается после успешной аутентификации. В зависимости от уровня доступа отображаются соответствующие параметры навигации.

Важно принять меры безопасности для предотвращения несанкционированного доступа к конфиденциальным частям сайта. Это может включать использование безопасных паролей, шифрование конфиденциальных данных и проверку пользовательских данных для предотвращения SQL-инъекций и других атак.